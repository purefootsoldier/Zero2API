generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Mesas {
  id              Int       @id @default(autoincrement())
  capacidad_mesa  Int       @db.UnsignedInt
  numero_mesa     Int       @unique
  estado_mesa     Int       @db.TinyInt // 0: Available, 1: Reserved, 2: Occupied
  id_empleado     Int
  empleado        Empleados @relation(fields: [id_empleado], references: [id])
  reservas        Reservas[]
  Pedidos         Pedidos[]
  @@index([id_empleado])
}

model Reservas {
  id_reservas              Int      @id @default(autoincrement())
  id_cliente               Int
  id_mesa                  Int
  fecha_hora               DateTime @db.Timestamp()
  numero_personas_reserva  Int      @db.UnsignedInt
  confirmacion             Int      @db.TinyInt // 0: Pending, 1: Confirmed, 2: Cancelled
  mesa                     Mesas    @relation(fields: [id_mesa], references: [id])
  cliente                  Clientes @relation(fields: [id_cliente], references: [id])
  @@index([id_mesa])
  @@index([id_cliente])
  @@index([fecha_hora])
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())

}

model Menu {
  id           Int           @id @default(autoincrement())
  nombre       String
  descripcion  String
  precio       Float
  imagen       String
  categoria    Categorias    @relation(fields: [id_categoria], references: [id])
  id_categoria Int
  DetallePedido DetallePedido[]
  Ordenes_cocina Ordenes_cocina[]
}

model Pedidos {
  id           Int             @id @default(autoincrement())
  fecha        DateTime
  mesa         Mesas           @relation(fields: [id_mesa], references: [id])
  id_mesa      Int
  cliente      Clientes        @relation(fields: [id_cliente], references: [id])
  id_cliente   Int
  empleado     Empleados       @relation(fields: [id_empleado], references: [id])
  id_empleado  Int
  tipo_pedido  String
  DetallePedido DetallePedido[]
  Ticket       Ticket[]
  Pago         Pago[]
  Ordenes_cocina Ordenes_cocina[]
}

model Categorias {
  id     Int    @id @default(autoincrement())
  nombre String
  Menu   Menu[]
}

model Empleados {
  id      Int     @id @default(autoincrement())
  nombre  String
  puesto  String
  salario Float
  Mesa    Mesas[]
  Pedidos Pedidos[]
}

model Clientes {
  id       Int       @id @default(autoincrement())
  nombre   String
  telefono String
  email    String
  Pedidos  Pedidos[]
  Reservas Reservas[]
}

model Permisos {
  id          Int    @id @default(autoincrement())
  nombre      String
  descripcion String
}

model Ticket {
  id_ticket      Int         @id @default(autoincrement())
  id_pedido      Int 
  pedido         Pedidos     @relation(fields: [id_pedido], references: [id])
  id_metodo_pago Int
  metodo_pago  Metodo_Pago @relation(fields: [id_metodo_pago], references: [id])
  total          Float
}

model DetallePedido {
  id_detalle_pedido Int     @id @default(autoincrement())
  cantidad          Int
  subtotal          Float
  Pedido            Pedidos @relation(fields: [id_pedido], references: [id])
  id_pedido         Int
  Menu              Menu    @relation(fields: [id_menu], references: [id])
  id_menu           Int
}

model Pago {
  id             Int         @id @default(autoincrement())
  pedido         Pedidos     @relation(fields: [id_pedido], references: [id])
  id_pedido      Int
  metodo_pago    Metodo_Pago @relation(fields: [id_metodo_pago], references: [id])
  id_metodo_pago Int
  fecha_pago     DateTime    @default(now())
  total          Float
}

model Metodo_Pago {
    id             Int           @id @default(autoincrement())
    nombre         String
    descripcion    String?
    activo         Boolean       @default(true)
    fecha_creacion DateTime      @default(now())
    ultima_actualizacion DateTime @updatedAt
    cargo_adicional Float?       @default(0.0)

    pagos          Pago[]

    Ticket Ticket[]
}

model Producto {
  id          Int      @id @default(autoincrement())
  nombre      String
  descripcion String
  precio      Float
  stock       Int
  cantidad    Int      @default(0)
  createAt    DateTime @default(now())
}

model Ordenes_cocina {
  id_ordenes_cocina Int     @id @default(autoincrement())
  pedido            Pedidos @relation(fields: [id_pedidos], references: [id])
  id_pedidos        Int 
  menu              Menu    @relation(fields: [id_menu], references: [id])
  id_menu           Int 
  cantidad          Int 
  estado            Boolean
}